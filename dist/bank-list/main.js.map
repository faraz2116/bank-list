{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/backend/backend-servcie.service.ts","webpack:///./src/app/caching-interceptor.service.ts","webpack:///./src/app/material/material.module.ts","webpack:///./src/app/request-cache.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"table {\\n  width: 100%;\\n}\\n\\n.mat-elevation-z8{\\n  padding: 10px \\n}\\n\\nth.mat-sort-header-sorted {\\n  color: black;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFZO0NBQ2I7O0FBRUQ7RUFDRSxhQUFhO0NBQ2Q7O0FBRUQ7RUFDRSxhQUFhO0NBQ2QiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5tYXQtZWxldmF0aW9uLXo4e1xuICBwYWRkaW5nOiAxMHB4IFxufVxuXG50aC5tYXQtc29ydC1oZWFkZXItc29ydGVkIHtcbiAgY29sb3I6IGJsYWNrO1xufSJdfQ== */\"","module.exports = \"<div class=\\\"mat-elevation-z8\\\">\\n  <div class=\\\"row no-padding no-margin\\\">\\n    <div class=\\\"col-md-6\\\" style=\\\"padding-left: 40px;\\\">\\n      <mat-form-field>\\n        <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n      </mat-form-field>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <mat-form-field>\\n        <mat-label>Select City</mat-label>\\n        <mat-select (selectionChange) = \\\"getBankLists($event)\\\" [(value)]=\\\"selectedCity\\\">\\n          <mat-option value=\\\"MUMBAI\\\">Mumbai</mat-option>\\n          <mat-option value=\\\"KOLKATA\\\">Kolkata</mat-option>\\n          <mat-option value=\\\"DELHI\\\">Delhi</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n    </div>\\n  </div>\\n\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n    <!-- Position Column -->\\n    <ng-container matColumnDef=\\\"bank_id\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.bank_id}} </td>\\n    </ng-container>\\n\\n    <!-- Name Column -->\\n    <ng-container matColumnDef=\\\"bank_name\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.bank_name}} </td>\\n    </ng-container>\\n\\n    <!-- Weight Column -->\\n    <ng-container matColumnDef=\\\"branch\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Branch </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.branch}} </td>\\n    </ng-container>\\n\\n    <!-- Symbol Column -->\\n    <ng-container matColumnDef=\\\"ifsc\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> IFCS </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.ifsc}} </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  </table>\\n\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\n</div>\\n\\n<router-outlet></router-outlet>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport {MatSort} from '@angular/material/sort';\nimport { BackendServcieService } from './backend/backend-servcie.service'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit {\n  title = 'bank-list';\n  displayedColumns: string[] = ['bank_id', 'bank_name', 'branch', 'ifsc'];\n\n  dataSource = new MatTableDataSource<any>();\n\n  //default selected \n  selectedCity : any = \"MUMBAI\"\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n\n  constructor(private _service: BackendServcieService) { }\n\n  ngOnInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    this.getBankListofCity(this.selectedCity);\n  }\n\n  getBankListofCity(city){\n    this.dataSource.data = []\n    this._service.getBankLists(city).subscribe(data => {\n      if (data) {\n        console.log(data)\n        this.dataSource.data = data\n      }\n    })\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  getBankLists(event){\n    console.log(\"event\",event);\n    let selectedCity = event.value;\n    console.log(\"selected City\",selectedCity);\n    this.getBankListofCity(selectedCity);\n  }\n}\n\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS, HttpClient } from '@angular/common/http';\nimport { RequestCache } from './request-cache.service';\nimport { CachingInterceptor } from './caching-interceptor.service';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './material/material.module';\nimport { BackendServcieService } from './backend/backend-servcie.service';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    HttpClientModule\n  ],\n  providers: [\n    BackendServcieService,\n    RequestCache,\n    { provide: HTTP_INTERCEPTORS, useClass: CachingInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BackendServcieService {\n\n  private apiBase: string; private api: any;\n\n  constructor(private http: HttpClient) {\n    this.apiBase = \"https://vast-shore-74260.herokuapp.com/banks\";\n    this.api = {\n      STATEBANKLIST: this.apiBase + \"?city=\"\n    }\n  }\n\n  // Common Method to call API\n  execute(request: string, url: string, data: any) {\n    // JSON API\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': \"application/json\",\n        'Access-Control-Allow-Origin': '*',\n      }),\n      withCredentials: false\n    };\n    // this.http.post() or this.http.get()\n    if (request == \"get\") {\n      return this.http.get<any>(url, httpOptions);\n    } else {\n      return this.http.post<any>(url, data, httpOptions);\n    }\n  }\n  // Common Method for Posting Data\n  post(url: string, data: any) {\n    return this.execute(\"post\", url, data);\n  }\n\n  // Common Method for Posting Data\n  get(url: string) {\n    return this.execute(\"get\", url, null);\n  }\n\n  // fetching all the bank details\n  getBankLists(stateName){\n    let url = this.api.STATEBANKLIST + stateName\n    return this.get(url)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpRequest, HttpResponse, HttpInterceptor, HttpHandler } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { startWith, tap } from 'rxjs/operators';\n\nimport { RequestCache } from './request-cache.service';\n\n@Injectable()\nexport class CachingInterceptor implements HttpInterceptor {\n  constructor(private cache: RequestCache) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    const cachedResponse = this.cache.get(req);\n    return cachedResponse ? of(cachedResponse) : this.sendRequest(req, next, this.cache);\n  }\n\n  sendRequest(\n    req: HttpRequest<any>,\n    next: HttpHandler,\n    cache: RequestCache): Observable<HttpEvent<any>> {\n    return next.handle(req).pipe(\n      tap(event => {\n        if (event instanceof HttpResponse) {\n          cache.put(req, event);\n        }\n      })\n    );\n  }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  MatFormFieldModule,\n  MatInputModule,\n  MatSelectModule,\n  MatSliderModule,\n  MatButtonModule,\n  MatDatepickerModule,\n  MatCheckboxModule,\n  MatRadioModule,\n  MatCardModule,\n  MatStepperModule,\n  MatToolbarModule,\n  MatDialogModule,\n  MatSnackBarModule,\n  MatDividerModule,\n  MatTooltipModule,\n  MatIconModule,\n  MatAutocompleteModule,\n  MatExpansionModule,\n  MatTableModule,\n  MatPaginatorModule,\n  MatSortModule\n} from '@angular/material';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    MatFormFieldModule,\n    MatButtonModule,\n    MatInputModule,\n    MatDatepickerModule,\n    MatCheckboxModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatCardModule,\n    MatStepperModule,\n    MatToolbarModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatDividerModule,\n    MatTooltipModule,\n    MatIconModule,\n    MatAutocompleteModule,\n    MatExpansionModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule\n  ],\n  exports: [\n    MatFormFieldModule,\n    MatButtonModule,\n    MatInputModule,\n    MatDatepickerModule,\n    MatCheckboxModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatCardModule,\n    MatStepperModule,\n    MatToolbarModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatDividerModule,\n    MatTooltipModule,\n    MatIconModule,\n    MatAutocompleteModule,\n    MatExpansionModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule\n  ]\n})\nexport class MaterialModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpResponse } from '@angular/common/http';\n\nconst maxAge = 30000;\n@Injectable()\nexport class RequestCache  {\n\n  cache = new Map();\n\n  get(req: HttpRequest<any>): HttpResponse<any> | undefined {\n    const url = req.urlWithParams;\n    const cached = this.cache.get(url);\n\n    if (!cached) {\n      return undefined;\n    }\n\n    const isExpired = cached.lastRead < (Date.now() - maxAge);\n    const expired = isExpired ? 'expired ' : '';\n    return cached.response;\n  }\n\n  put(req: HttpRequest<any>, response: HttpResponse<any>): void {\n    const url = req.url;\n    const entry = { url, response, lastRead: Date.now() };\n    this.cache.set(url, entry);\n\n    const expired = Date.now() - maxAge;\n    this.cache.forEach(expiredEntry => {\n      if (expiredEntry.lastRead < expired) {\n        this.cache.delete(expiredEntry.url);\n      }\n    });\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}